{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["HighscoreType","hourInMs","hourInS","days","Array","fill","numEnabledDays","Date","getTime","getUTCDate","map","_","idx","playerList","initialiseScores","scores","sortPlayersForDay","BothStars","Object","entries","members","i","insertStarGainsForDay","getNthStarTs","player","n","day","completion_day_level","get_star_ts","highscoreType","bothStarsSort","Delta","sort","playerA","playerB","playerA2Ts","playerB2Ts","playerA1Ts","playerB1Ts","Number","MAX_SAFE_INTEGER","deltaDaySort","StarGain","playerAStarGain","parseInt","star_gain","starGainSort","FirstStar","firstStarSort","firstStarSortedList","secondStarSortedList","forEach","players","dayCompletion","length","renderUnixTimestamp","ts","undefined","date0Ms","diff","playerHours","Math","floor","playerMinutes","playerSeconds","toString","padStart","renderPlayerTime","selectedDay","firstStarTime","secondStarTime","deltaStarTime","renderPlayerDeltaTimestamp","star1Gain","star2Gain","className","getPlacementClass","App","useState","setPlayers","setSelectedDay","selectedScoreType","setSelectedScoreType","showScoreboardInput","setShowScoreboardInput","customJSON","setCustomJSON","href","onClick","ev","preventDefault","stopPropagation","split","dayNumber","dayNumberIdx","value","onChange","scoreType","target","name","id","renderPlayer","htmlFor","JSON","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41b35afc.chunk.js","sourcesContent":["import { useState } from 'react';\nimport scores from './scores.json';\nimport './App.css';\nenum HighscoreType {\n  BothStars = 'bothstars',\n  Delta = 'delta',\n  StarGain = 'stargain',\n  FirstStar = 'firststar',\n}\nconst hourInMs = 1000*60*60;\nconst hourInS = 60*60;\nconst minuteInMs = 1000*60;\nconst minuteInS = 60;\nconst secondInMs = 1000;\nlet days = new Array(25).fill(false);\nlet curDay = new Date( new Date().getTime() - 5 * 3600 * 1000).getUTCDate();\nconst numEnabledDays = curDay;\ndays = days.map((_, idx) => idx+1 > numEnabledDays ? false : true)\nconst playerList = initialiseScores(scores);\n\nfunction initialiseScores(scores: any) {\n  const playerList = sortPlayersForDay(\"\"+numEnabledDays, HighscoreType.BothStars, Object.entries(scores.members));\n  for (let i = 0; i < numEnabledDays; i++) {\n    insertStarGainsForDay(\"\"+(i+1), playerList);\n  }\n  return playerList;\n} \n\n\nfunction App() {\n  const [players, setPlayers] = useState<any[]>(playerList);\n  const [selectedDay, setSelectedDay] = useState<string>(\"\"+numEnabledDays);\n  const [selectedScoreType, setSelectedScoreType] = useState<HighscoreType>(HighscoreType.BothStars);\n  const [showScoreboardInput, setShowScoreboardInput] = useState<boolean>(false);\n  const [customJSON, setCustomJSON] = useState<string>('')\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"privboard-row\">\n          <span className=\"privboard-days\">\n            {days.map((day, idx) => {\n              return day ? <a href=\"\" onClick={(ev) => {\n                ev.preventDefault()\n                ev.stopPropagation();\n                setSelectedDay(\"\"+(idx+1));\n                setPlayers(sortPlayersForDay(\"\"+(idx+1), selectedScoreType, players));\n              }}>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</a> : <span>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</span>\n            })}\n          </span>\n        </div>\n      </header>\n      <section>\n      <select value={selectedScoreType} onChange={(ev) => {\n        const scoreType = ev.target.value as HighscoreType;\n        setSelectedScoreType(scoreType)\n        setPlayers(sortPlayersForDay(selectedDay, scoreType, players));\n      }}>\n              <option value={HighscoreType.BothStars}>Time to both stars</option>\n              <option value={HighscoreType.FirstStar}>Time to first star</option>\n              <option value={HighscoreType.Delta}>Time between star 1 and 2</option>\n              <option value={HighscoreType.StarGain}>Points gained</option>\n      </select>\n\n        {players.map((player, idx) => {\n          return renderPlayer(player[1], selectedDay, idx, selectedScoreType);\n        })}\n        \n      </section>\n      <aside className={`score-input-aside ${showScoreboardInput ? 'expanded' : ''}`}>\n        <label htmlFor=\"scoresinput\">Insert custom scoreboard JSON</label><button className=\"link-like-button\" onClick={() => setShowScoreboardInput(!showScoreboardInput)}>{showScoreboardInput ? '-' : '+'}</button>\n        {showScoreboardInput && <textarea id=\"scoresinput\" value={customJSON} onChange={(ev) => {\n          setCustomJSON(ev.target.value)\n        }}></textarea>}\n        {showScoreboardInput && <button onClick={() => {\n          let parsedScore = JSON.parse(customJSON);\n          let playerList = initialiseScores(parsedScore);\n          setPlayers(playerList);\n        }}>Set scoreboard</button>}\n      </aside>\n    </div>\n  );\n}\nfunction getNthStarTs(player: any, n: number, day: string) {\n  return player.completion_day_level[day]?.[\"\"+n]?.get_star_ts;\n}\nfunction sortPlayersForDay(day: string, highscoreType: HighscoreType, playerList: any[]): any[] {\n  switch(highscoreType) {\n    case HighscoreType.BothStars:\n      return bothStarsSort(day, playerList);\n    case HighscoreType.Delta:\n      return deltaDaySort(day, playerList);\n    case HighscoreType.StarGain:\n      return starGainSort(day, playerList);\n    case HighscoreType.FirstStar:\n      return firstStarSort(day, playerList);\n  }\n}\nfunction bothStarsSort(day: string, playerList: any[]): any[] {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return playerA2Ts - playerB2Ts;\n    } else if (playerA2Ts && !playerB2Ts) {\n      return playerA2Ts - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - playerB2Ts;\n    }\n    return (playerA1Ts ?? Number.MAX_SAFE_INTEGER) - (playerB1Ts ?? Number.MAX_SAFE_INTEGER);\n  });\n}\nfunction deltaDaySort(day: string, playerList: any[]) {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return (playerA2Ts - playerA1Ts) - (playerB2Ts - playerB1Ts);\n    } else if (playerA2Ts && !playerB2Ts) {\n      return (playerA2Ts - playerA1Ts) - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - (playerB2Ts - playerB1Ts);\n    }\n    return 0;\n  });\n}\n\nfunction starGainSort(day: string, playerList: any[]) {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA1Star = parseInt(playerA[1].completion_day_level[day]?.[\"1\"]?.star_gain);\n    const playerA2Star = parseInt(playerA[1].completion_day_level[day]?.[\"2\"]?.star_gain);\n    const playerAStarGain = playerA1Star + playerA2Star;\n    const playerB1Star = parseInt(playerB[1].completion_day_level[day]?.[\"1\"]?.star_gain);\n    const playerB2Star = parseInt(playerB[1].completion_day_level[day]?.[\"2\"]?.star_gain);\n    const playerBStarGain = playerB1Star + playerB2Star;\n    return playerBStarGain - playerAStarGain;\n  });\n}\n\nfunction firstStarSort(day: string, playerList: any[]) {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA1Ts && playerB1Ts) {\n      return (playerA1Ts) - (playerB1Ts);\n    } else if (playerA1Ts && !playerB1Ts) {\n      return (playerA1Ts) - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA1Ts && playerB1Ts) {\n      return Number.MAX_SAFE_INTEGER - (playerB1Ts - playerB1Ts);\n    }\n    return 0;\n  });\n}\n\nfunction insertStarGainsForDay(day: string, playerList: any[]) {\n  let firstStarSortedList = firstStarSort(day, playerList);\n  let secondStarSortedList = bothStarsSort(day, playerList);\n  firstStarSortedList.forEach((player, idx, players) => {\n    let dayCompletion = player[1].completion_day_level[day]?.[\"1\"];\n    if (dayCompletion) {\n      dayCompletion.star_gain = players.length-idx;\n    } else {\n      player[1].completion_day_level[day] = {\n        '1': {\n          star_gain: 0,\n        },\n      }\n    }\n  });\n  secondStarSortedList.forEach((player, idx, players) => {\n    let dayCompletion = player[1].completion_day_level[day]?.[\"2\"];\n    if (dayCompletion) {\n      dayCompletion.star_gain = players.length-idx;\n    } else {\n      player[1].completion_day_level[day] = {\n        ...player[1].completion_day_level[day],\n        '2': {\n          star_gain: 0,\n        },\n      }\n    }\n  });\n}\n\nfunction renderUnixTimestamp(ts: number, day: string): string {\n  if (ts === undefined) {\n    return '';\n  }\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  const date0Ms = new Date(2021, 11, parseInt(day), 6, 0, 0, 0).getTime();\n  const finishTime = new Date(ts * 1000).getTime();\n  const diff = finishTime - date0Ms;\n\n  const playerHours = Math.floor(diff/hourInMs);\n  const playerMinutes = Math.floor((diff%hourInMs)/minuteInMs);\n  const playerSeconds = Math.floor((diff%minuteInMs)/secondInMs);\n  // Will display time in 10:30:23 format\n  var formattedTime = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\n  return formattedTime\n}\n\nfunction renderPlayerTime(player: any, selectedDay: string, highscoreType: HighscoreType) {\n  if (highscoreType === HighscoreType.BothStars || highscoreType === HighscoreType.FirstStar) {\n    return `${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts as number, selectedDay)} / ${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts as number, selectedDay)}`\n  } else if (highscoreType === HighscoreType.Delta) {\n    return renderPlayerDeltaTimestamp(player, selectedDay);\n  } else if (highscoreType === HighscoreType.StarGain) {\n    let star1Gain = player.completion_day_level?.[selectedDay]?.[\"1\"]?.star_gain;\n    let star2Gain = player.completion_day_level?.[selectedDay]?.[\"2\"]?.star_gain;\n    return <><span className=\"privboard-star-firstonly\">{star1Gain}</span>{' / '}<span className=\"privboard-star-both\">{star2Gain}</span>{' -> '}<span className=\"privboard-star-both\">{(star1Gain??0)+(star2Gain??0)}</span></>;\n  }\n}\n\nfunction renderPlayerDeltaTimestamp(player: any, selectedDay: string) {\n  const firstStarTime = player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts;\n  const secondStarTime = player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts;\n  if (secondStarTime === undefined) {\n    return '';\n  }\n  const deltaStarTime = secondStarTime - firstStarTime;\n  const playerHours = Math.floor(deltaStarTime/hourInS);\n  const playerMinutes = Math.floor((deltaStarTime%hourInS)/minuteInS);\n  const playerSeconds = Math.floor((deltaStarTime%minuteInS));\n  var formattedDelta = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\n  return formattedDelta;\n}\n\nfunction getPlacementClass(idx: number) {\n  switch(idx) {\n    case 0:\n      return 'privboard-star-both';\n    case 1:\n      return 'privboard-star-firstonly';\n    case 2:\n      return 'privboard-third';\n    default:\n      return '';\n  }\n}\n\nfunction renderPlayer(player: any, selectedDay: string, idx: number, highscoreType: HighscoreType) {\n  return (\n    <div className=\"privboard-row\">\n      <span className=\"privboard-position\">{idx+1})</span> {renderPlayerTime(player, selectedDay, highscoreType)} <span className={`privboard-name ${getPlacementClass(idx)} ${player.name === null ? 'leaderboard-anon' : ''}`}>{player.name ?? `(anonymous user #${player.id})`}</span></div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}