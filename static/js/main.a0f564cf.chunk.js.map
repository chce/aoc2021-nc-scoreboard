{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["days","Array","fill","map","_","idx","playerList","Object","entries","scores","members","getNthStarTs","player","n","day","completion_day_level","get_star_ts","sortForDay","sort","playerA","playerB","playerA2Ts","playerB2Ts","playerA1Ts","playerB1Ts","Number","MAX_SAFE_INTEGER","renderUnixTimestamp","ts","undefined","date0Ms","Date","parseInt","getTime","diff","hourInMs","playerHours","Math","floor","playerMinutes","playerSeconds","toString","padStart","App","useState","selectedDay","setSelectedDay","className","href","onClick","ev","preventDefault","stopPropagation","split","dayNumber","dayNumberIdx","console","log","name","renderPlayer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f564cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport scores from './scores.json';\nimport './App.css';\n\nlet days = new Array(25).fill(false);\nconst numEnabledDays = 2;\ndays = days.map((_, idx) => idx+1 > numEnabledDays ? false : true)\nconst playerList = Object.entries(scores.members);\nsortForDay(\"2\");\nfunction App() {\n \n  const [selectedDay, setSelectedDay] = useState<string>(\"2\");\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"privboard-row\">\n          <span className=\"privboard-days\">\n            {days.map((day, idx) => {\n              return day ? <a href=\"\" onClick={(ev) => {\n                ev.preventDefault()\n                ev.stopPropagation();\n                setSelectedDay(\"\"+(idx+1));\n                sortForDay(\"\"+(idx+1));\n              }}>{idx+1}</a> : <span>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</span>\n            })}\n            \n\n          </span>\n        </div>\n      </header>\n      <section>\n        {playerList.map((player, idx) => {\n          return renderPlayer(player[1], selectedDay, idx);\n        })}\n        \n      </section>\n    </div>\n  );\n}\nfunction getNthStarTs(player: any, n: number, day: string) {\n  return player.completion_day_level[day]?.[\"\"+n]?.get_star_ts;\n}\nfunction sortForDay(day: string) {\n  playerList.sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return playerA2Ts - playerB2Ts;\n    } else if (playerA2Ts && !playerB2Ts) {\n      return playerA2Ts - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - playerB2Ts;\n    }\n    return (playerA1Ts ?? Number.MAX_SAFE_INTEGER) - (playerB1Ts ?? Number.MAX_SAFE_INTEGER);\n  }) \n}\nfunction renderUnixTimestamp(ts: number, day: string): string {\n  if (ts === undefined) {\n    return '';\n  }\n  debugger;\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  const date0Ms = new Date(2021, 11, parseInt(day), 6, 0, 0, 0).getTime();\n  const finishTime = new Date(ts * 1000).getTime();\n  const diff = finishTime - date0Ms;\n  const hourInMs = 1000*60*60;\n  const minuteInMs = 1000*60;\n  const secondInMs = 1000;\n  const playerHours = Math.floor(diff/hourInMs);\n  const playerMinutes = Math.floor((diff%hourInMs)/minuteInMs);\n  const playerSeconds = Math.floor((diff%minuteInMs)/secondInMs);\n  // Will display time in 10:30:23 format\n  var formattedTime = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\n  return formattedTime\n}\n\nfunction renderPlayer(player: any, selectedDay: string, idx: number) {\n  console.log(player);\n  console.log(selectedDay);\n  return (\n    <div className=\"privboard-row\">\n      <span className=\"privboard-position\">{idx+1})</span> {renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts as number, selectedDay)} / {renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts as number, selectedDay)} <span className=\"privboard-name\">{player.name}</span></div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}