{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["days","Array","fill","map","_","idx","playerList","Object","entries","scores","members","getNthStarTs","player","n","day","completion_day_level","get_star_ts","sortForDay","sort","playerA","playerB","playerA2Ts","playerB2Ts","playerA1Ts","playerB1Ts","Number","MAX_SAFE_INTEGER","renderUnixTimestamp","ts","undefined","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","App","useState","selectedDay","setSelectedDay","className","href","onClick","ev","preventDefault","stopPropagation","toString","split","dayNumber","dayNumberIdx","console","log","name","renderPlayer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6/8BAIIA,EAAO,IAAIC,MAAM,IAAIC,MAAK,GAE9BF,EAAOA,EAAKG,KAAI,SAACC,EAAGC,GAAJ,QAAYA,EAAI,EADT,MAEvB,IAAMC,EAAaC,OAAOC,QAAQC,EAAOC,SAgCzC,SAASC,EAAaC,EAAaC,EAAWC,GAAc,IAAD,IACzD,iBAAOF,EAAOG,qBAAqBD,UAAnC,iBAAO,EAAmC,GAAGD,UAA7C,aAAO,EAA0CG,YAEnD,SAASC,EAAWH,GAClBR,EAAWY,MAAK,SAACC,EAASC,GACxB,IAAMC,EAAaV,EAAaQ,EAAQ,GAAI,EAAGL,GACzCQ,EAAaX,EAAaS,EAAQ,GAAI,EAAGN,GACzCS,EAAaZ,EAAaQ,EAAQ,GAAI,EAAGL,GACzCU,EAAab,EAAaS,EAAQ,GAAI,EAAGN,GAC/C,OAAIO,GAAcC,EACTD,EAAaC,EACXD,IAAeC,EACjBD,EAAaI,OAAOC,kBACjBL,GAAcC,EACjBG,OAAOC,iBAAmBJ,GAE5B,OAACC,QAAD,IAACA,IAAcE,OAAOC,mBAAtB,OAA2CF,QAA3C,IAA2CA,IAAcC,OAAOC,qBAG3E,SAASC,EAAoBC,GAC3B,QAAWC,IAAPD,EACF,MAAO,GAIT,IAAIE,EAAO,IAAIC,KAAU,IAALH,GAEhBI,EAAQF,EAAKG,WAEbC,EAAU,IAAMJ,EAAKK,aAErBC,EAAU,IAAMN,EAAKO,aAIzB,OADoBL,EAAQ,IAAME,EAAQI,QAAQ,GAAK,IAAMF,EAAQE,QAAQ,GAjE/ErB,EAAW,KA8EIsB,MA7Ef,WAEE,MAAsCC,mBAAiB,KAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,iBAAhB,SACG3C,EAAKG,KAAI,SAACW,EAAKT,GACd,OAAOS,EAAM,mBAAG8B,KAAK,GAAGC,QAAS,SAACC,GAChCA,EAAGC,iBACHD,EAAGE,kBACHN,EAAe,IAAIrC,EAAI,IACvBY,EAAW,IAAIZ,EAAI,KAJR,SAKTA,EAAI,IAAS,gCAAQA,EAAI,GAAG4C,WAAWC,MAAM,IAAI/C,KAAI,SAACgD,EAAWC,GAAZ,OAA6B,qCAAGA,EAAe,EAAI,uBAAQ,6BAAOD,mBAOnI,kCACG7C,EAAWH,KAAI,SAACS,EAAQP,GACvB,OA6CV,SAAsBO,EAAa6B,EAAqBpC,GAAc,IAAD,YAGnE,OAFAgD,QAAQC,IAAI1C,GACZyC,QAAQC,IAAIb,GAEV,sBAAKE,UAAU,gBAAf,UACE,uBAAMA,UAAU,qBAAhB,UAAsCtC,EAAI,EAA1C,OADF,IACwDsB,EAAmB,UAACf,EAAOG,4BAAR,iBAAC,EAA8B0B,UAA/B,iBAAC,EAA6C,UAA9C,aAAC,EAAmDzB,aAD/H,MAC0JW,EAAmB,UAACf,EAAOG,4BAAR,iBAAC,EAA8B0B,UAA/B,iBAAC,EAA6C,UAA9C,aAAC,EAAmDzB,aADjO,IACyP,sBAAM2B,UAAU,iBAAhB,SAAkC/B,EAAO2C,UAlDrRC,CAAa5C,EAAO,GAAI6B,EAAapC,YClBvCoD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.374b6c62.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport scores from './scores.json';\nimport './App.css';\n\nlet days = new Array(25).fill(false);\nconst numEnabledDays = 2;\ndays = days.map((_, idx) => idx+1 > numEnabledDays ? false : true)\nconst playerList = Object.entries(scores.members);\nsortForDay(\"2\");\nfunction App() {\n \n  const [selectedDay, setSelectedDay] = useState<string>(\"2\");\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"privboard-row\">\n          <span className=\"privboard-days\">\n            {days.map((day, idx) => {\n              return day ? <a href=\"\" onClick={(ev) => {\n                ev.preventDefault()\n                ev.stopPropagation();\n                setSelectedDay(\"\"+(idx+1));\n                sortForDay(\"\"+(idx+1));\n              }}>{idx+1}</a> : <span>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</span>\n            })}\n            \n\n          </span>\n        </div>\n      </header>\n      <section>\n        {playerList.map((player, idx) => {\n          return renderPlayer(player[1], selectedDay, idx);\n        })}\n        \n      </section>\n    </div>\n  );\n}\nfunction getNthStarTs(player: any, n: number, day: string) {\n  return player.completion_day_level[day]?.[\"\"+n]?.get_star_ts;\n}\nfunction sortForDay(day: string) {\n  playerList.sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return playerA2Ts - playerB2Ts;\n    } else if (playerA2Ts && !playerB2Ts) {\n      return playerA2Ts - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - playerB2Ts;\n    }\n    return (playerA1Ts ?? Number.MAX_SAFE_INTEGER) - (playerB1Ts ?? Number.MAX_SAFE_INTEGER);\n  }) \n}\nfunction renderUnixTimestamp(ts: number): string {\n  if (ts === undefined) {\n    return '';\n  }\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  var date = new Date(ts * 1000);\n  // Hours part from the timestamp\n  var hours = date.getHours();\n  // Minutes part from the timestamp\n  var minutes = \"0\" + date.getMinutes();\n  // Seconds part from the timestamp\n  var seconds = \"0\" + date.getSeconds();\n\n  // Will display time in 10:30:23 format\n  var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n  return formattedTime\n}\n\nfunction renderPlayer(player: any, selectedDay: string, idx: number) {\n  console.log(player);\n  console.log(selectedDay);\n  return (\n    <div className=\"privboard-row\">\n      <span className=\"privboard-position\">{idx+1})</span> {renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts as number)} / {renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts as number)} <span className=\"privboard-name\">{player.name}</span></div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}