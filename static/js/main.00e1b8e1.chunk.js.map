{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["HighscoreType","hourInMs","hourInS","days","Array","fill","map","_","idx","playerList","sortPlayersForDay","BothStars","Object","entries","scores","members","getNthStarTs","player","n","day","completion_day_level","get_star_ts","highscoreType","sort","playerA","playerB","playerA2Ts","playerB2Ts","playerA1Ts","playerB1Ts","Number","MAX_SAFE_INTEGER","bothStarsSort","Delta","deltaDaySort","renderUnixTimestamp","ts","undefined","date0Ms","Date","parseInt","getTime","diff","playerHours","Math","floor","playerMinutes","playerSeconds","toString","padStart","renderPlayerTime","selectedDay","firstStarTime","secondStarTime","deltaStarTime","renderPlayerDeltaTimestamp","getPlacementClass","App","useState","players","setPlayers","setSelectedDay","selectedScoreType","setSelectedScoreType","className","href","onClick","ev","preventDefault","stopPropagation","split","dayNumber","dayNumberIdx","value","onChange","scoreType","target","console","log","name","renderPlayer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00e1b8e1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport scores from './scores.json';\nimport './App.css';\nenum HighscoreType {\n  BothStars = 'bothstars',\n  Delta = 'delta'\n}\nconst hourInMs = 1000*60*60;\nconst hourInS = 60*60;\nconst minuteInMs = 1000*60;\nconst minuteInS = 60;\nconst secondInMs = 1000;\nlet days = new Array(25).fill(false);\nconst numEnabledDays = 5;\ndays = days.map((_, idx) => idx+1 > numEnabledDays ? false : true)\nconst playerList = sortPlayersForDay(\"\"+numEnabledDays, HighscoreType.BothStars, Object.entries(scores.members));\n\n\nfunction App() {\n  const [players, setPlayers] = useState<any[]>(playerList);\n  const [selectedDay, setSelectedDay] = useState<string>(\"\"+numEnabledDays);\n  const [selectedScoreType, setSelectedScoreType] = useState<HighscoreType>(HighscoreType.BothStars);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"privboard-row\">\n          <span className=\"privboard-days\">\n            {days.map((day, idx) => {\n              return day ? <a href=\"\" onClick={(ev) => {\n                ev.preventDefault()\n                ev.stopPropagation();\n                setSelectedDay(\"\"+(idx+1));\n                setPlayers(sortPlayersForDay(\"\"+(idx+1), selectedScoreType, players));\n              }}>{idx+1}</a> : <span>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</span>\n            })}\n          </span>\n        </div>\n      </header>\n      <section>\n      <select value={selectedScoreType} onChange={(ev) => {\n        const scoreType = ev.target.value as HighscoreType;\n        setSelectedScoreType(scoreType)\n        setPlayers(sortPlayersForDay(selectedDay, scoreType, players));\n      }}>\n              <option value={HighscoreType.BothStars}>Time to both stars</option>\n              <option value={HighscoreType.Delta}>Time between star 1 and 2</option>\n      </select>\n\n        {players.map((player, idx) => {\n          return renderPlayer(player[1], selectedDay, idx, selectedScoreType);\n        })}\n        \n      </section>\n    </div>\n  );\n}\nfunction getNthStarTs(player: any, n: number, day: string) {\n  return player.completion_day_level[day]?.[\"\"+n]?.get_star_ts;\n}\nfunction sortPlayersForDay(day: string, highscoreType: HighscoreType, playerList: any[]): any[] {\n  switch(highscoreType) {\n    case HighscoreType.BothStars:\n      return bothStarsSort(day, playerList);\n    case HighscoreType.Delta:\n      return deltaDaySort(day, playerList);\n  }\n}\nfunction bothStarsSort(day: string, playerList: any[]): any[] {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return playerA2Ts - playerB2Ts;\n    } else if (playerA2Ts && !playerB2Ts) {\n      return playerA2Ts - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - playerB2Ts;\n    }\n    return (playerA1Ts ?? Number.MAX_SAFE_INTEGER) - (playerB1Ts ?? Number.MAX_SAFE_INTEGER);\n  });\n}\nfunction deltaDaySort(day: string, playerList: any[]) {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return (playerA2Ts - playerA1Ts) - (playerB2Ts - playerB1Ts);\n    } else {if (playerA2Ts && !playerB2Ts) {\n      return (playerA2Ts - playerA1Ts) - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - (playerB2Ts - playerB1Ts);\n    }}\n    return 0;\n  });\n}\nfunction renderUnixTimestamp(ts: number, day: string): string {\n  if (ts === undefined) {\n    return '';\n  }\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  const date0Ms = new Date(2021, 11, parseInt(day), 6, 0, 0, 0).getTime();\n  const finishTime = new Date(ts * 1000).getTime();\n  const diff = finishTime - date0Ms;\n\n  const playerHours = Math.floor(diff/hourInMs);\n  const playerMinutes = Math.floor((diff%hourInMs)/minuteInMs);\n  const playerSeconds = Math.floor((diff%minuteInMs)/secondInMs);\n  // Will display time in 10:30:23 format\n  var formattedTime = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\n  return formattedTime\n}\n\nfunction renderPlayerTime(player: any, selectedDay: string, highscoreType: HighscoreType) {\n  if (highscoreType === HighscoreType.BothStars) {\n    return `${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts as number, selectedDay)} / ${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts as number, selectedDay)}`\n  } else if (highscoreType === HighscoreType.Delta) {\n    return renderPlayerDeltaTimestamp(player, selectedDay);\n\n  }\n}\n\nfunction renderPlayerDeltaTimestamp(player: any, selectedDay: string) {\n  const firstStarTime = player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts;\n  const secondStarTime = player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts;\n  if (secondStarTime === undefined) {\n    return '';\n  }\n  const deltaStarTime = secondStarTime - firstStarTime;\n  const playerHours = Math.floor(deltaStarTime/hourInS);\n  const playerMinutes = Math.floor((deltaStarTime%hourInS)/minuteInS);\n  const playerSeconds = Math.floor((deltaStarTime%minuteInS));\n  var formattedDelta = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\n  return formattedDelta;\n}\n\nfunction getPlacementClass(idx: number) {\n  switch(idx) {\n    case 0:\n      return 'privboard-star-both';\n    case 1:\n      return 'privboard-star-firstonly';\n    case 2:\n      return 'privboard-third';\n    default:\n      return '';\n  }\n}\n\nfunction renderPlayer(player: any, selectedDay: string, idx: number, highscoreType: HighscoreType) {\n  console.log(player);\n  console.log(selectedDay);\n  return (\n    <div className=\"privboard-row\">\n      <span className=\"privboard-position\">{idx+1})</span> {renderPlayerTime(player, selectedDay, highscoreType)} <span className={`privboard-name ${getPlacementClass(idx)}`}>{player.name}</span></div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}